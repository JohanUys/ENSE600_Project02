package GUI;

import LOGIC.*;
import java.awt.BorderLayout;

public class MainFrame extends javax.swing.JFrame {

    // ========== PROPERTIES ==========
    private MainPanel mainPanel;
    private CharacterOverlayPanel overlayPanel;
    
    private Map map;
    private Player player;
    private Wind wind;
    private Port port;
    
    // ========== CONSTRUCTOR ==========
    public MainFrame() {
        initComponents();
          
        map = new Map();
        player = new Player();
        wind = new Wind();
        port = map.getPorts().get("Rhymek");
        
        initOverlayPanel();        
        mainPanel = new MainPanel();
        setContentPane(mainPanel);
    }

    // ========== AUTO-GENERATED ==========
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainFrameMenuBar = new javax.swing.JMenuBar();
        menuBarFile = new javax.swing.JMenu();
        menuBarEdit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuBarFile.setText("File");
        mainFrameMenuBar.add(menuBarFile);

        menuBarEdit.setText("Edit");
        mainFrameMenuBar.add(menuBarEdit);

        setJMenuBar(mainFrameMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 277, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // ========== MAIN METHOD ==========
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    
    //Initialise CharacterOverlay
    private void initOverlayPanel() {
        overlayPanel = new CharacterOverlayPanel(player);
        overlayPanel.setVisible(false); // Initialise hidden
        add(overlayPanel, BorderLayout.EAST);
    }
    
    //Add CharacterOverlay
    public void onGameLoaded(Player player) {
        // Create and show overlay panel once game is loaded
        this.player = player;

        overlayPanel.updateGold(player.getGold());
        overlayPanel.setVisible(true);

        revalidate(); // refresh layout
        repaint();    // repaint UI
    }
    
    //Updates Player Gold Display
    public void updateGoldDisplay() {
        if (player != null && overlayPanel != null) {
            overlayPanel.updateGold(player.getGold());
        }
    }
    
    // ========== AUTO-GENERATED ==========
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar mainFrameMenuBar;
    private javax.swing.JMenu menuBarEdit;
    private javax.swing.JMenu menuBarFile;
    // End of variables declaration//GEN-END:variables
}
